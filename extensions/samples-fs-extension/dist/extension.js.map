{"version":3,"file":"extension.js","mappings":"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","sources":["webpack://vscode-gsfs/external commonjs \"vscode\"","webpack://vscode-gsfs/./src/gsfs.ts","webpack://vscode-gsfs/webpack/bootstrap","webpack://vscode-gsfs/./src/extension.ts"],"sourcesContent":["module.exports = require(\"vscode\");","import * as vscode from 'vscode';\ntype SampleData = { [dirname: string]: SampleData | string; }\n// eslint-disable-next-line @typescript-eslint/no-var-requires\nconst samplesdata:SampleData = require('../samples.json');\n\nexport class File implements vscode.FileStat {\n\n\ttype: vscode.FileType;\n\tctime: number;\n\tmtime: number;\n\tsize: number;\n\n\tname: string;\n\tdata?: Uint8Array;\n\n\tconstructor(public uri: vscode.Uri, name: string) {\n\t\tthis.type = vscode.FileType.File;\n\t\tthis.ctime = Date.now();\n\t\tthis.mtime = Date.now();\n\t\tthis.size = 0;\n\t\tthis.name = name;\n\t}\n}\n\nexport class Directory implements vscode.FileStat {\n\n\ttype: vscode.FileType;\n\tctime: number;\n\tmtime: number;\n\tsize: number;\n\n\tname: string;\n\tentries: Map<string, File | Directory>;\n\n\tconstructor(public uri: vscode.Uri, name: string) {\n\t\tthis.type = vscode.FileType.Directory;\n\t\tthis.ctime = Date.now();\n\t\tthis.mtime = Date.now();\n\t\tthis.size = 0;\n\t\tthis.name = name;\n\t\tthis.entries = new Map();\n\t}\n}\n\nexport type Entry = File | Directory;\nconst textEncoder = new TextEncoder();\n\nexport class GSFS implements vscode.FileSystemProvider, vscode.Disposable {\n\tstatic scheme = 'gsfs';\n\n\tprivate readonly disposable: vscode.Disposable;\n\n\tconstructor() {\n\t\tthis.disposable = vscode.Disposable.from(\n\t\t\tvscode.workspace.registerFileSystemProvider(GSFS.scheme, this, { isCaseSensitive: true }),\n\t\t);\n\t}\n\n\tdispose() {\n\t\tthis.disposable?.dispose();\n\t}\n\n\tseed() {\n\t\tthis.createDirectory(vscode.Uri.parse(`gsfs:/samples/`));\n\t\tconst readSamplesDir = (dir: SampleData, relPath = '') => {\n\t\t\tfor (const [name, data] of Object.entries(dir)) {\n\t\t\t\tif (typeof data === 'string') {\n\t\t\t\t\t// console.log(\"FILE:\", `gsfs:/${relPath}/${name}`);\n\t\t\t\t\tthis.writeFile(vscode.Uri.parse(`gsfs:/${relPath}/${name}`), textEncoder.encode(data), { create: true, overwrite: true });\n\t\t\t\t} else {\n\t\t\t\t\t// console.log(\"DIRECTORY:\", `gsfs:/${relPath}/${name}`);\n\t\t\t\t\tthis.createDirectory(vscode.Uri.parse(`gsfs:/${relPath}/${name}`));\n\t\t\t\t\treadSamplesDir(data, relPath + '/' + name);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treadSamplesDir(samplesdata, \"samples\");\n\t\treturn;\n\t}\n\n\troot = new Directory(vscode.Uri.parse('gsfs:/'), '');\n\n\t// --- manage file metadata\n\n\tstat(uri: vscode.Uri): vscode.FileStat {\n\t\treturn this._lookup(uri, false);\n\t}\n\n\treadDirectory(uri: vscode.Uri): [string, vscode.FileType][] {\n\t\tconst entry = this._lookupAsDirectory(uri, false);\n\t\tconst result: [string, vscode.FileType][] = [];\n\t\tfor (const [name, child] of entry.entries) {\n\t\t\tresult.push([name, child.type]);\n\t\t}\n\t\treturn result;\n\t}\n\n\t// --- manage file contents\n\n\treadFile(uri: vscode.Uri): Uint8Array {\n\t\tconst data = this._lookupAsFile(uri, false).data;\n\t\tif (data) {\n\t\t\treturn data;\n\t\t}\n\t\tthrow vscode.FileSystemError.FileNotFound();\n\t}\n\n\twriteFile(uri: vscode.Uri, content: Uint8Array, options: { create: boolean, overwrite: boolean }): void {\n\t\tconst basename = this._basename(uri.path);\n\t\tconst parent = this._lookupParentDirectory(uri);\n\t\tlet entry = parent.entries.get(basename);\n\t\tif (entry instanceof Directory) {\n\t\t\tthrow vscode.FileSystemError.FileIsADirectory(uri);\n\t\t}\n\t\tif (!entry && !options.create) {\n\t\t\tthrow vscode.FileSystemError.FileNotFound(uri);\n\t\t}\n\t\tif (entry && options.create && !options.overwrite) {\n\t\t\tthrow vscode.FileSystemError.FileExists(uri);\n\t\t}\n\t\tif (!entry) {\n\t\t\tentry = new File(uri, basename);\n\t\t\tparent.entries.set(basename, entry);\n\t\t\tthis._fireSoon({ type: vscode.FileChangeType.Created, uri });\n\t\t}\n\t\tentry.mtime = Date.now();\n\t\tentry.size = content.byteLength;\n\t\tentry.data = content;\n\n\t\tthis._fireSoon({ type: vscode.FileChangeType.Changed, uri });\n\t}\n\n\t// --- manage files/folders\n\n\trename(oldUri: vscode.Uri, newUri: vscode.Uri, options: { overwrite: boolean }): void {\n\t\tif (!options.overwrite && this._lookup(newUri, true)) {\n\t\t\tthrow vscode.FileSystemError.FileExists(newUri);\n\t\t}\n\n\t\tconst entry = this._lookup(oldUri, false);\n\t\tconst oldParent = this._lookupParentDirectory(oldUri);\n\n\t\tconst newParent = this._lookupParentDirectory(newUri);\n\t\tconst newName = this._basename(newUri.path);\n\n\t\toldParent.entries.delete(entry.name);\n\t\tentry.name = newName;\n\t\tnewParent.entries.set(newName, entry);\n\n\t\tthis._fireSoon(\n\t\t\t{ type: vscode.FileChangeType.Deleted, uri: oldUri },\n\t\t\t{ type: vscode.FileChangeType.Created, uri: newUri }\n\t\t);\n\t}\n\n\tdelete(uri: vscode.Uri): void {\n\t\tconst dirname = uri.with({ path: this._dirname(uri.path) });\n\t\tconst basename = this._basename(uri.path);\n\t\tconst parent = this._lookupAsDirectory(dirname, false);\n\t\tif (!parent.entries.has(basename)) {\n\t\t\tthrow vscode.FileSystemError.FileNotFound(uri);\n\t\t}\n\t\tparent.entries.delete(basename);\n\t\tparent.mtime = Date.now();\n\t\tparent.size -= 1;\n\t\tthis._fireSoon({ type: vscode.FileChangeType.Changed, uri: dirname }, { uri, type: vscode.FileChangeType.Deleted });\n\t}\n\n\tcreateDirectory(uri: vscode.Uri): void {\n\t\tconst basename = this._basename(uri.path);\n\t\tconst dirname = uri.with({ path: this._dirname(uri.path) });\n\t\tconst parent = this._lookupAsDirectory(dirname, false);\n\n\t\tconst entry = new Directory(uri, basename);\n\t\tparent.entries.set(entry.name, entry);\n\t\tparent.mtime = Date.now();\n\t\tparent.size += 1;\n\t\tthis._fireSoon({ type: vscode.FileChangeType.Changed, uri: dirname }, { type: vscode.FileChangeType.Created, uri });\n\t}\n\n\t// --- lookup\n\n\tprivate _lookup(uri: vscode.Uri, silent: false): Entry;\n\tprivate _lookup(uri: vscode.Uri, silent: boolean): Entry | undefined;\n\tprivate _lookup(uri: vscode.Uri, silent: boolean): Entry | undefined {\n\t\tconst parts = uri.path.split('/');\n\t\tlet entry: Entry = this.root;\n\t\tfor (const part of parts) {\n\t\t\tif (!part) {\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\tlet child: Entry | undefined;\n\t\t\tif (entry instanceof Directory) {\n\t\t\t\tchild = entry.entries.get(part);\n\t\t\t}\n\t\t\tif (!child) {\n\t\t\t\tif (!silent) {\n\t\t\t\t\tthrow vscode.FileSystemError.FileNotFound(uri);\n\t\t\t\t} else {\n\t\t\t\t\treturn undefined;\n\t\t\t\t}\n\t\t\t}\n\t\t\tentry = child;\n\t\t}\n\t\treturn entry;\n\t}\n\n\tprivate _lookupAsDirectory(uri: vscode.Uri, silent: boolean): Directory {\n\t\tconst entry = this._lookup(uri, silent);\n\t\tif (entry instanceof Directory) {\n\t\t\treturn entry;\n\t\t}\n\t\tthrow vscode.FileSystemError.FileNotADirectory(uri);\n\t}\n\n\tprivate _lookupAsFile(uri: vscode.Uri, silent: boolean): File {\n\t\tconst entry = this._lookup(uri, silent);\n\t\tif (entry instanceof File) {\n\t\t\treturn entry;\n\t\t}\n\t\tthrow vscode.FileSystemError.FileIsADirectory(uri);\n\t}\n\n\tprivate _lookupParentDirectory(uri: vscode.Uri): Directory {\n\t\tconst dirname = uri.with({ path: this._dirname(uri.path) });\n\t\treturn this._lookupAsDirectory(dirname, false);\n\t}\n\n\t// --- manage file events\n\n\tprivate _emitter = new vscode.EventEmitter<vscode.FileChangeEvent[]>();\n\tprivate _bufferedEvents: vscode.FileChangeEvent[] = [];\n\tprivate _fireSoonHandle?: any;\n\n\treadonly onDidChangeFile: vscode.Event<vscode.FileChangeEvent[]> = this._emitter.event;\n\n\twatch(_resource: vscode.Uri): vscode.Disposable {\n\t\t// ignore, fires for all changes...\n\t\treturn new vscode.Disposable(() => { return; });\n\t}\n\n\tprivate _fireSoon(...events: vscode.FileChangeEvent[]): void {\n\t\tthis._bufferedEvents.push(...events);\n\n\t\tif (this._fireSoonHandle) {\n\t\t\tclearTimeout(this._fireSoonHandle);\n\t\t}\n\n\t\tthis._fireSoonHandle = setTimeout(() => {\n\t\t\tthis._emitter.fire(this._bufferedEvents);\n\t\t\tthis._bufferedEvents.length = 0;\n\t\t}, 5);\n\t}\n\n\t// --- path utils\n\n\tprivate _basename(path: string): string {\n\t\tpath = this._rtrim(path, '/');\n\t\tif (!path) {\n\t\t\treturn '';\n\t\t}\n\n\t\treturn path.substr(path.lastIndexOf('/') + 1);\n\t}\n\n\tprivate _dirname(path: string): string {\n\t\tpath = this._rtrim(path, '/');\n\t\tif (!path) {\n\t\t\treturn '/';\n\t\t}\n\n\t\treturn path.substr(0, path.lastIndexOf('/'));\n\t}\n\n\tprivate _rtrim(haystack: string, needle: string): string {\n\t\tif (!haystack || !needle) {\n\t\t\treturn haystack;\n\t\t}\n\n\t\tconst needleLen = needle.length,\n\t\t\thaystackLen = haystack.length;\n\n\t\tif (needleLen === 0 || haystackLen === 0) {\n\t\t\treturn haystack;\n\t\t}\n\n\t\tlet offset = haystackLen,\n\t\t\tidx = -1;\n\n\t\t// eslint-disable-next-line no-constant-condition\n\t\twhile (true) {\n\t\t\tidx = haystack.lastIndexOf(needle, offset - 1);\n\t\t\tif (idx === -1 || idx + needleLen !== offset) {\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tif (idx === 0) {\n\t\t\t\treturn '';\n\t\t\t}\n\t\t\toffset = idx;\n\t\t}\n\n\t\treturn haystack.substring(0, offset);\n\t}\n\n\tprivate _getFiles(): Set<File> {\n\t\tconst files = new Set<File>();\n\n\t\tthis._doGetFiles(this.root, files);\n\n\t\treturn files;\n\t}\n\n\tprivate _doGetFiles(dir: Directory, files: Set<File>): void {\n\t\tdir.entries.forEach(entry => {\n\t\t\tif (entry instanceof File) {\n\t\t\t\tfiles.add(entry);\n\t\t\t} else {\n\t\t\t\tthis._doGetFiles(entry, files);\n\t\t\t}\n\t\t});\n\t}\n}","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","import * as vscode from 'vscode';\nimport { GSFS } from './gsfs';\n\ndeclare const navigator: unknown;\n\nexport async function activate(context: vscode.ExtensionContext) {\n\tif (typeof navigator === 'object') { // do not run under node.js\n\t\tconst gsfs = enableFs(context);\n\t\tgsfs.seed();\n\n\t\tconst searchLocation: string = await vscode.commands.executeCommand('gamma-samples-extension.location', 'get', 'search') as string;\n\n\t\tconst params = new URLSearchParams(searchLocation);\n\t\tif (params.has('path')) {\n\t\t\tconst path = params.get('path');\n\t\t\tvscode.commands.executeCommand('vscode.open', vscode.Uri.parse(`gsfs:/samples/${path}`));\n\t\t} else {\n\t\t\tvscode.commands.executeCommand('vscode.open', vscode.Uri.parse(`gsfs:/samples/README.webnb`));\n\t\t}\n\n\t\t// if no directory is open, open the samples directory\n\t\tif (vscode.workspace.workspaceFolders === undefined) {\n\t\t\tvscode.commands.executeCommand('vscode.openFolder', vscode.Uri.parse('gsfs:/samples'), {forceReuseWindow: true});\n\t\t}\n\t}\n}\n\nfunction enableFs(context: vscode.ExtensionContext): GSFS {\n\tconst gsfs = new GSFS();\n\tcontext.subscriptions.push(gsfs);\n\n\treturn gsfs;\n}"],"names":["module","exports","require","samplesdata","File","constructor","uri","name","this","type","vscode","FileType","ctime","Date","now","mtime","size","Directory","entries","Map","textEncoder","TextEncoder","GSFS","root","Uri","parse","_emitter","EventEmitter","_bufferedEvents","onDidChangeFile","event","disposable","Disposable","from","workspace","registerFileSystemProvider","scheme","isCaseSensitive","dispose","seed","createDirectory","readSamplesDir","dir","relPath","data","Object","writeFile","encode","create","overwrite","stat","_lookup","readDirectory","entry","_lookupAsDirectory","result","child","push","readFile","_lookupAsFile","FileSystemError","FileNotFound","content","options","basename","_basename","path","parent","_lookupParentDirectory","get","FileIsADirectory","FileExists","set","_fireSoon","FileChangeType","Created","byteLength","Changed","rename","oldUri","newUri","oldParent","newParent","newName","delete","Deleted","dirname","with","_dirname","has","silent","parts","split","part","FileNotADirectory","watch","_resource","events","_fireSoonHandle","clearTimeout","setTimeout","fire","length","_rtrim","substr","lastIndexOf","haystack","needle","needleLen","haystackLen","offset","idx","substring","_getFiles","files","Set","_doGetFiles","forEach","add","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","undefined","__webpack_modules__","async","context","navigator","gsfs","subscriptions","enableFs","searchLocation","commands","executeCommand","params","URLSearchParams","workspaceFolders","forceReuseWindow"],"sourceRoot":""}